<template>
  <view class="tab-wrapper">
    <view class="tab-header">
      <repeat for="{{TitleData}}" wx:for-item="item" key="index">
        <view class="tab-item {{currentTabsIndex == index ? 'active': ''}}" @tap="onTabsItemTap({{index}})">{{item}}</view>
      </repeat>
    </view>
    <view class="tab-content">
      <view class="left-content" wx:if="{{ currentTabsIndex == 0 }}">
        <repeat for="{{VipType}}" wx:for-item="item" key:index="index" wx:if="{{item[3] == 1}}">
          <view class="item">
            <view class="item-left">
              <view class="first">{{item[0]}} <text>{{item[1]}}/张</text></view>
              <text class="date">{{item[2]}}</text>
            </view>
            <button open-type="getUserInfo" lang="zh_CN" bindgetuserinfo="vip" class="btn {{vipOpenState == true? '': 'active'}}" wx-if="{{open_status == 2}}" data-index='{{index}}'>购买</button>
            <button open-type="getUserInfo" lang="zh_CN" bindgetuserinfo="vip" class="btn {{vipOpenState == true? '': 'active'}}" wx-if="{{open_status == 1}}" data-index='{{index}}'>续费</button>
          </view>
        </repeat>
        <view class="phoneBox">
          <view class="phoneTitleBox">
            <text>手机</text>
          </view>
          <input placeholder="请输入开通手机号码(必填)" type="number" value="{{phoneNumber}}" @input="phoneInp" />
        </view>
      </view>
      <view class="right-content" wx:if="{{ currentTabsIndex == 1 }}">
        <view class="content">
          <text class="title">激活码</text>
          <input type="number" maxlength="15" @input="PasswordInput" placeholder="请输入激活码"/>
        </view>
        <view class="phoneBox" style="margin-top:30rpx;">
          <input placeholder="请输入开通手机号码(必填)" type="number" value="{{phoneNumberPassWord}}" @input="phoneInpPassWord" />
        </view>
        <button open-type="getUserInfo" lang="zh_CN" bindgetuserinfo="Verification" class="btn {{numOpenState == true? '': 'active'}}">立即激活</button>
      </view> 
    </view>
  </view>
</template>
<script>
  import wepy from 'wepy'
  import VipModel from './Vip-model'
  import Address from '../../utils/address.js'
  export default class extends wepy.page {
    config = {
      navigationBarBackgroundColor: "#fff",
      navigationBarTitleText: '开通会员',
    }
    data = {
      currentTabsIndex: 0,
      TitleData: [],
      activate_num: '',
      VipType: null,
      open_status: null,
      vipOpenState: true,
      numOpenState: true,
      card_id: '',
      formID:'',
      phoneNumber:'',
      phoneNumberPassWord: ''
    }
    methods = {
      onTabsItemTap(index){
        this.currentTabsIndex = index
      },
      PasswordInput($event){
        this.activate_num = $event.detail.value.trim()
      },
      phoneInpPassWord(e){
        this.phoneNumberPassWord = e.detail.value
      },
      Verification(res){
        Address.getUser(res,()=>{
          let isPhoneNumberOk = VipModel.verifyPhoneNumber(this.phoneNumberPassWord)
          if(!isPhoneNumberOk){
            return false
          }
          if(Number(this.activate_num.length) === 0){
            wx.showToast({
              title: '请输入激活码',
              icon:'loading',
              duration: 1000,
              mask: true,
            })
            return false
          }
          if (isNaN(this.activate_num)){
            wx.showToast({
              title: '请输入纯数字',
              icon:'loading',
              duration: 1000,
              mask: true,
            })
            return false;
          }
          if(Number(this.activate_num.length) <= 14){
            wx.showToast({
              title: '激活码长度不足',
              icon:'loading',
              duration: 1000,
              mask: true,
            })
            return false
          }
          this.numOpenState  = false
          let query = {}
          query.activate_num = this.activate_num
          query.link_tel = this.phoneNumberPassWord
          VipModel.numOpen(query, (ResData)=>{
            if(ResData == 1){
              wx.showToast({
                title: '开通会员成功',
                icon: 'success',
                duration: 2000
              })
              this.numOpenState = true
              this.activate_num = ''
              this.open_status = 1
              this.$apply()
              return false
            }
            if(ResData.code == 4){
              wx.showToast({
                title: '激活码错误',
                icon: 'success',
                duration: 2000
              })
              this.numOpenState = true
              this.$apply()
              return false
            }
            if(ResData.code == 5){
              wx.showToast({
                title: '激活码已经使用',
                icon: 'success',
                duration: 2000
              })
              this.numOpenState = true
              this.$apply()
              return false
            }
          })
        })
      },
      phoneInp(e){
        this.phoneNumber = e.detail.value
      },
      vip(res){
        Address.getUser(res,()=>{
          let index = res.currentTarget.dataset.index
          let isPhoneNumberOk = VipModel.verifyPhoneNumber(this.phoneNumber)
          if(!isPhoneNumberOk){
            return false
          }
          this.vipOpenState  = false
          let param = {
            time_type: index,
            card_id: this.card_id,
            link_tel: this.phoneNumber
          }
          VipModel.VipExecPay(param, (ResData)=>{
            if(ResData.code == 1) {
              VipModel.wxPay(ResData.data, ResData=>{
                // 支付成功以后, 跳转到状态页面 把防止重复提交的订单状态变量设置成 true
                if(ResData == 2) {
                  wx.showToast({
                    title: '恭喜你,成功了,',
                    icon: 'success',
                    duration: 1200
                  })
                  this.vipOpenState = true
                  this.$apply()
                  wx.switchTab({
                    url: '/pages/Index/index'
                  })
                }
                // 取消支付以后,也需要把支付状态变量设置成 true
                if(ResData == 1) {
                  this.vipOpenState = true
                  this.$apply()
                }
              })
            }
          })
        })
      }
    }
    onLoad(e){
      this.formID = e.formId
    }
    onShow(e){
      let query = {}
      if(this.formID){
        query.magic_form_id = this.formID
      }
      VipModel.getVipType(query,(ResData)=>{
        if(ResData.code == 1){
          this.VipType = ResData.data.time_type
          this.open_status = ResData.data.open_status
          this.card_id =  ResData.data.card_id
          this.TitleData = ResData.data.open_magic_card
          this.phoneNumber = ResData.data.link_tel
          this.phoneNumberPassWord = ResData.data.link_tel
          this.$apply()
        }
      })
    }
  }
</script>
<style lang="less">
page{
  background-color: #f6f5f5;
}
.tab-wrapper{
  height: 100%;
}
.tab-header{
  width: 100%;
  background-color: #fff;
  display: flex;
  justify-content: space-around;
  .tab-item{
    font-size:28rpx;
    line-height: 74rpx;
    color: #000000;
    &.active{
      color: #ebaf35;
      border-bottom: 4rpx solid #ffa717;

    }
  }
}
  .tab-content{
    .left-content{
      background-color: #fff;
      padding-top: 30rpx;
      display: flex;
      justify-content: center;
      flex-direction: column;
      align-items: center;
      .item{
        width: 690rpx;
        height: 131rpx;
        display: flex;
        align-items: center;
        justify-content: space-between;
      ~ .item{
        border-top: 1rpx solid #eeeeee;
      }
        .item-left{
          font-size: 0;
          display: flex;
          flex-direction: column;
          .first{
            font-size:32rpx;
            color: #000000;
            text{
              padding-left:14rpx;
              font-size:28rpx;
              color: #de6d6e;
              letter-spacing: 4rpx;
            }
          }
          .date{
            margin-top:8rpx;
            font-size:24rpx;
            color: #000000;
            letter-spacing: 2rpx;
          }
        }
        .btn{
          margin: 0;
          padding: 0;
          background-color: transparent;
          width: 159rpx;
          line-height: 69rpx;
          text-align: center;
          border-radius: 50rpx;
          background-color: #ffa715;
          font-size: 32rpx;
          color: #fff;
          &::after{
            content:none;
          }
          &.active{
            pointer-events: none;
          }
        }
      }
    }
    .right-content{
      .content{
        width: 100%;
        padding-left: 31rpx;
        box-sizing: border-box;
        font-size:0;
        background-color: #fff;
        padding-bottom: 41rpx;
        .title{
          font-size: 24rpx;
          color: #919191;
          line-height:80rpx;
          letter-spacing: 2rpx;
        }
        input{
          width: 668rpx;
          height: 65rpx;
          line-height:65rpx;
          padding-left: 21rpx;
          box-sizing: border-box;
          font-size: 24rpx;
          border: 1rpx solid #efefef;
          letter-spacing: 2rpx;
          color: #7f7f7f;
        }
      }
      .btn{
        margin-top: 60rpx;
        display: block;
        width: 690rpx;
        margin-left:auto;
        margin-right:auto;
        line-height:92rpx;
        background-color: #ffba15;
        border-radius: 11rpx;
        border: solid 1px #c99c40;
        text-align: center;
        letter-spacing: 2rpx;
        color: #fff;
        &.active{
          pointer-events: none;
        }
      }
    }
    .phoneBox{
      width: 100%;
      .phoneTitleBox{
        width: 100%;
        height: 90rpx;
        display: flex;
        align-items: center;
        box-sizing: border-box;
        padding-left: 30rpx;
        background-color: #F6F5F5;
        text{
          font-size: 32rpx;
          color: #000;
        }
      }
      input{
        background-color: #fff;
        font-size: 30rpx;
        width: 100%;
        height: 100rpx;
        box-sizing: border-box;
        padding: 30rpx;
      }
    }
  }
</style>
