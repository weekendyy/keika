<template>
  <view class="coupon">
    <view class="order-state">
      <image src="../img/icon_evaluate.png"></image>
      <text>等待使用</text>
      <text>剩余：{{goodsInfo.residue_time}}</text>
    </view>
    <view class="goodsNum-status">
      <text>共{{goodsInfo.buy_num}}份，可使用{{goodsInfo.buy_num-goodsInfo.destroy_num}}份</text>
    </view>
    <view class="goods-wrapper">
      <view class="goods-pic">
        <image src="{{goodsInfo.main_img}}"></image>
      </view>
      <view class="goods-info">
        <text class="info-txt1">{{goodsInfo.delivery_name}}</text>
        <view class="countView">
          <text class="info-txt2">￥{{goodsInfo.pay_price}}/份</text>
          <count :maxNum.sync="maxNum" :countValue.sync="countValue"></count>
        </view>
      </view>
    </view>
    <view class="Verification-wrapper">
      <view class="Verification-main">
        <view class="title">
          <text>密码验证</text>
        </view>
        <view class="main">
          <text>商家密码</text>
          <input placeholder="请让收银员或者店员输入密码" maxlength="20" @input="bindKeyInput"/>
        </view>
      </view>
      <view class="Verification-options">
        <button class="btn" @tap="passVerification">确定消费</button>
        <text class="Requirement">把此页出示给商家进行验证(截图无效)</text>
      </view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import OrderModel from './order-model'
  import count from '../../../components/count'
  export default class Index extends wepy.page{
    config = {
      navigationBarTitleText: '宝贝核销'
    }
    components = {
      count: count
    }
    data = {
      goodsInfo: '',
      passModel:'',
      orderId: '',
      maxNum: 0,
      countValue: 1
    }
    methods = {
      bindKeyInput($event){
        this.passModel = $event.detail.value.trim()
      },
      passVerification(){
        if(Number(this.passModel.length)==0){
          wx.showToast({
            title: '请输入验证密码',
            icon:'loading',
            duration: 1000
          })
          return false
        }
        if(Number(this.passModel.length) <= 5){
          wx.showToast({
            title: '请输入最少6位',
            icon:'loading',
            duration: 1000
          })
          return false
        }
        let param = {
          password: this.passModel,
          orderID: this.orderId,
          destroy_num: this.countValue
        }
        OrderModel.destory_promotion(param, ResData=>{
          if(ResData.code == 0) {
            wx.showToast({
              title: "密码错误",
              icon:'loading',
              duration: 1000
            })
            return false
          }
          if(ResData.code == 1) {
            let that = this
            wx.showToast({
              title: "核销成功",
              icon:'loading',
              duration: 1000,
              success: function(){
                if(that.countValue == (that.goodsInfo.buy_num-that.goodsInfo.destroy_num)){
                  let prevPage = getCurrentPages()[getCurrentPages().length-2]
                  prevPage.setData({
                    buy_log: 3
                  })
                }
                setTimeout(()=>{
                  wx.showToast({
                    title: "正在返回上一页",
                    icon: "success",
                    duration: 1000
                  })
                },1700)
                setTimeout(()=>{
                  wx.navigateBack({
                    delta: 1
                  })
                },2200)
              }
            })
          }
        })
      }
    }
    onLoad(options){
      console.log(options.id)
      this.orderId = options.id
      OrderModel.destory_goods(this.orderId, ResData=> {
        if(ResData.code == 1){
          this.goodsInfo = ResData.data
          this.maxNum = (this.goodsInfo.buy_num-this.goodsInfo.destroy_num)
          this.$apply()
        }
      })
    }
  }
</script>

<style lang="less">
  page{
    background-color:#f3f5f5;
    height:100%;
  }
.order-state{
  background: linear-gradient(to left, #FF7142,#FF7545);
  width: auto;
  height:140rpx;
  display: flex;
  align-items: center;
  color: #fff;
  image{
    padding-left:20rpx;
    width:28rpx;
    height:40rpx;
    margin-right:26rpx;
  }
  text{
    &:first-of-type{
      font-size:28rpx;
    }
    &:last-child{
      flex: 1;
      text-align: right;
      font-size:34rpx;
      padding-right:20rpx;
    }
  }
}
.goodsNum-status{
  width: 100%;
  height: 70rpx;
  font-size: 28rpx;
  color: #666;
  background-color: #fff;
  margin: 10rpx 0;
  box-sizing: border-box;
  padding: 0 20rpx;
  line-height: 70rpx;
}
.goods-wrapper{
  background: #fff;
  padding-left:20rpx;
  padding-right:20rpx;
  padding-top: 30rpx;
  padding-bottom:30rpx;
  display: flex;
  align-items: center;
  margin-bottom:28rpx;
  .goods-pic{
    margin-right:32rpx;
    image{
      width:118rpx;
      height:118rpx;
      border:1px solid #eaeaea;
      vertical-align: top;
    }
  }
  .goods-info{
    display: flex;
    flex-direction: column;
    .info-txt1{
      font-size:28rpx;
      color:#272727;
    }
    .countView{
      display: flex;
      align-items: center;
      margin-top:22rpx;
      .info-txt2{
        font-size:32rpx;
        color:#ff683a;
        margin-right: 50rpx;
      }
    }
  }
}
.Verification-wrapper{
  margin-top:30rpx;
  .Verification-main{
    background-color: #fff;
    text{
      display: block;
      line-height:80rpx;
      width: 156rpx;
      text-align: center;
      font-size:28rpx;
    }
    .title {
      text{
        color:#ff6236;
        border-bottom: 6rpx solid #ff6236;
        margin-bottom:-6rpx;
        line-height:70rpx;
      }
    }
    .main{
      display: flex;
      border-top:2rpx solid #f0f0f0;
      height:80rpx;
      line-height:80rpx;
      text{
        color: #888888;
      }
      input{
        flex:1;
        font-size:28rpx;
        height: 80rpx;
        border-left:1px solid #f0f0f0;
        padding-left: 38rpx;
      }
    }
  }
  .Verification-options{
    display: flex;
    flex-direction: column;
    align-items: center;
    .btn{
      width: 358rpx;
      line-height:80rpx;
      text-align: center;
      background-image: linear-gradient(0deg, #ff683a 0%, #ff9b64 100%), ;
      color:#ffffff;
      font-size:34rpx;
      border-radius: 10rpx;
      margin-top:56rpx;
      margin-bottom:30rpx;
      letter-spacing: 2rpx;
    }
    .Requirement{
      font-size:24rpx;
      color: #888888;
    }
  }
}
</style>
